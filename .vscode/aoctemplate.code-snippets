{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"Create AOC file for the day": {
		"prefix": "aoc",
		"body": [
			"using System;",
			"using System.IO;",
			"using System.Collections.Generic;",
			"using System.Linq;",
			"",
			"namespace AdventOfCode",
			"{",
			"\tclass ${1:dayNumber}",
			"\t{",
			"\t\tpublic static void PartOne()",
			"\t\t{",
			"\t\t\t$0",
			"\t\t}",
			"",
			"\t\tpublic static void PartTwo()",
			"\t\t{",
			"\t\t\t",
			"\t\t}",
			"\t}",
			"}",
		]
	},

	"Quick snippet to read a file line by line": {
		"prefix": "aocfile",
		"body": [
			"string line;",
			"StreamReader file = new StreamReader(\"input/${1:inputFilename}.txt\");",
			"",
			"while ((line = file.ReadLine()) != null)",
			"{",
			"\t$0",
			"}",
			"",
			"file.Close();"
		]
	},

	"Quick snippet to read a file char by char": {
		"prefix": "aocchar",
		"body": [
			"char currentChar;",
			"StreamReader file = new StreamReader(\"input/${1:inputFilename}.txt\");",
			"",
			"while ((file.Peek() >= 0))",
			"{",
			"\tcurrentChar = (char)file.Read();",
			"\t",
			"\t$0",
			"}",
			"",
			"file.Close();"
		]
	}
}